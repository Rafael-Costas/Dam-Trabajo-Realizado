import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

public class Ejercicio1 extends JFrame {

	private static final long serialVersionUID = 1L;
	private JPanel contentPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Ejercicio1 frame = new Ejercicio1();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});

		 SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();
	     Session session = sessionFactory.openSession();

	     Transaction transaction = null;
	     try {
	         // Inicia una transacci칩n
	         transaction = session.beginTransaction();

	         // Crea y configura una entidad Clientes
	         Categories cliente = new Categories();
	         cliente.setCategoryId(123454438);
	         cliente.setCategoryName("JoseMota");
	         cliente.setDescription("Se침or de las motas");
	         cliente.setCategoryId(null);
	         
	       

	         // Guarda la entidad en la base de datos
	        // session.save(cliente);
	         
	         session.persist(cliente);

	         // Compromete la transacci칩n
	         transaction.commit();
	     } catch (RuntimeException e) {
	         if (transaction != null) transaction.rollback();
	         e.printStackTrace();
	     } finally {
	         // Cierra la sesi칩n
	         session.close();
	     }
	 }
	
	

	/**
	 * Create the frame.
	 */
	public Ejercicio1() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
	}

}
